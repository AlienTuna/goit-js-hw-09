{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,uBAChCC,OAAQF,SAASC,cAAc,sBAC/BE,SAAUH,SAASC,cAAc,wBACjCG,SAAUJ,SAASC,cAAc,iBAiCnC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAACI,EAAKC,GACvBC,YAAW,WACTF,EAAI,CAACN,WAAUC,S,GACdA,E,EAGc,SAACK,EAAKC,GACvBC,YAAW,WACTD,EAAI,CAACP,WAAUC,S,GACdA,E,GA1CTT,EAAKM,SAASW,iBAAiB,SAC/B,SAAuBC,GACrBA,EAAEC,iBACF,IAAMC,EAAgBC,OAAOrB,EAAKC,QAAQqB,OACpCC,EAAUF,OAAOrB,EAAKI,OAAOkB,OAC7BE,EAAYH,OAAOrB,EAAKK,SAASiB,OAEzCN,YAAW,WAET,IAAK,IAAIS,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnClB,EAAckB,EAAGF,EAAQE,GACxBC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,QAAQC,IAAI,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC1DX,EAAAiC,OAAOC,QAAQ,uBAAwCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DwB,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,QAAQC,IAAI,sBAAuCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OACzDX,EAAAiC,OAAOG,QAAQ,sBAAqCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,MAG7DW,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  buttonEl: document.querySelector('.form button'),\n}\n\nrefs.buttonEl.addEventListener('click', onButtonClick);\nfunction onButtonClick(e) {\n  e.preventDefault();\n  const firstDelayVal = Number(refs.delayEl.value);\n  const stepVal = Number(refs.stepEl.value);\n  const amountVal = Number(refs.amountEl.value);\n\nsetTimeout(() => {\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, stepVal*i)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });;\n  }\n}, firstDelayVal)\n\n}\n\n/* Supplement the code of the createPromise function so that it returns one promise \n * that will be fulfilled or rejected after delay time. \n * The value of the promise must be an object containing the position and delay properties \n * with the values of these parameters. \n * Use the initial function code to choose whether to fulfill or reject the promise.\n*/ \nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        res({position, delay});\n      }, delay)\n    });\n  } else {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        rej({position, delay});\n      }, delay)\n    });\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delayEl","document","querySelector","stepEl","amountEl","buttonEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","firstDelayVal","Number","value","stepVal","amountVal","i","then","param","console","log","concat","Notify","success","catch","failure"],"version":3,"file":"03-promises.dabc0424.js.map"}